name: Shomvob CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  lint-and-test:
    name: Lint and Test Apps
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache-dependency-path: |
            frontend/package-lock.json
            backend/package-lock.json

      # FRONTEND
      - name: Install Frontend Deps
        working-directory: ./frontend
        run: npm ci

      - name: Lint Frontend
        working-directory: ./frontend
        run: npm run lint || echo "No lint script"

      # BACKEND
      - name: Install Backend Deps
        working-directory: ./backend
        run: npm ci

      - name: Lint Backend
        working-directory: ./backend
        run: npm run lint || echo "No lint script"

      - name: Test Backend
        working-directory: ./backend
        run: npm test || echo "No test script"

  deploy-frontend:
    name: Deploy Frontend to Vercel
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Debug Vercel Inputs
        run: |
          echo "VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}"
          echo "VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}"
          echo "VERCEL_TOKEN is set: ${{ secrets.VERCEL_TOKEN != '' }}"

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          github-token: ${{ secrets.GITHUB_TOKEN }}

  deploy-backend:
    name: Deploy Backend to Railway
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Railway CLI
        run: npm install -g @railway/cli@latest

      - name: Debug Railway Inputs
        run: |
          echo "RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}"
          echo "RAILWAY_TOKEN is set: ${{ secrets.RAILWAY_TOKEN != '' }}"

      - name: Deploy to Railway
        working-directory: ./backend
        run: railway up --service backend
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}